


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     main.s 
    2 00000000         ; Author:       ece353 staff 
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           hw1
    6 00000000                 export           TRANSACTIONS_TOTAL
    7 00000000                 export           TRANSACTIONS
    8 00000000                 export           TEAM
    9 00000000                 export           PERSON1
   10 00000000                 export           PERSON2
   11 00000000         
   12 00000000         ;**********************************************
   13 00000000         ; SRAM
   14 00000000         ;**********************************************
   15 00000000                 AREA             SRAM, READWRITE
   16 00000000         ; ALLOCATE SRAM HERE
   17 00000000 00 00 00 
              00       TRANSACTIONS_TOTAL
                               SPACE            4           ;Need 7*4 Bits so a
                                                            llocating 4 Bytes
   18 00000004 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 2 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TRANSACTIONS
                               SPACE            400         ;Each Trans is 4 by
                                                            tes long, need 100
   19 00000194         
   20 00000194                 align
   21 00000194         
   22 00000194         ;**********************************************
   23 00000194         ; Constant Variables (FLASH) Segment
   24 00000194         ;**********************************************
   25 00000194                 AREA             FLASH, CODE, READONLY
   26 00000000 54 65 61 
              6D 20 41 
              77 65 73 
              6F 6D 65 
              20 53 69 
              74 74 69 
              6E 67 20 
              50 6F 74 
              61 74 6F 
              65 73    TEAM    DCB              "Team Awesome Sitting Potatoes"
   27 0000001D 00              DCB              0
   28 0000001E 52 79 61 
              6E 20 42 
              61 6D 62 



ARM Macro Assembler    Page 4 


              72 6F 75 
              67 68    PERSON1 DCB              "Ryan Bambrough"
   29 0000002C 00              DCB              0
   30 0000002D 4E 69 63 
              68 6F 6C 
              61 73 20 
              41 64 61 
              6D 73    PERSON2 DCB              "Nicholas Adams"
   31 0000003B 00              DCB              0
   32 0000003C                 align
   33 0000003C         
   34 0000003C         ;**********************************************
   35 0000003C         ; Code (FLASH) Segment
   36 0000003C         ; main assembly program
   37 0000003C         ;**********************************************
   38 0000003C         hw1     PROC
   39 0000003C         
   40 0000003C E92D 5FFF       PUSH             {R0-R12, LR}
   41 00000040         ; DO NOT MODIFY ANTHING ABOVE THIS LINE!!!
   42 00000040         ; DO NOT MODIFY REGISTERS R13-R15!!!
   43 00000040         
   44 00000040         ;*******************************************;
   45 00000040         ; Definitions        ;
   46 00000040         ; R0 = Sub-Total (Current Total)   ;
   47 00000040         ; R1 = Pre-Total (All Total)    ;
   48 00000040         ; R2 = 1,000,000s       ;
   49 00000040         ; R3 = 100,000s        ;
   50 00000040         ; R4 = 10,000s        ;
   51 00000040         ; R5 = 1,000s        ;
   52 00000040         ; R6 = 100s         ;
   53 00000040         ; R7 = 10s         ;
   54 00000040         ; R8 = 1s         ;
   55 00000040         ; R9 - R10 = Temporary Registers   ;
   56 00000040         ; R11 = Record of place in TRANSACTIONS  ;
   57 00000040         ; R12 = Undecoded 32-bit Trans-Code   ;
   58 00000040         ;*******************************************;
   59 00000040         
   60 00000040         ; Decoding Format
   61 00000040         ;  Filter BCD into temp Reg
   62 00000040         ;  Convert BCD to Number, storing into Reg
   63 00000040         
   64 00000040 EA20 0000       BIC              R0, R0, R0  ; Clear Total
   65 00000044 EA21 0101       BIC              R1, R1, R1
   66 00000048 EA22 0202       BIC              R2, R2, R2
   67 0000004C EA23 0303       BIC              R3, R3, R3
   68 00000050 EA24 0404       BIC              R4, R4, R4
   69 00000054 EA25 0505       BIC              R5, R5, R5
   70 00000058 EA26 0606       BIC              R6, R6, R6
   71 0000005C EA27 0707       BIC              R7, R7, R7
   72 00000060 EA28 0808       BIC              R8, R8, R8
   73 00000064 EA29 0909       BIC              R9, R9, R9
   74 00000068 EA2A 0A0A       BIC              R10, R10, R10
   75 0000006C EA2B 0B0B       BIC              R11, R11, R11 ; Clear Pointer
   76 00000070 EA2C 0C0C       BIC              R12, R12, R12
   77 00000074         
   78 00000074 F8DF B1E0       LDR              R11, =(TRANSACTIONS)
   79 00000078         
   80 00000078 F1AB 0B04       SUB              R11, R11, #4
   81 0000007C         



ARM Macro Assembler    Page 5 


   82 0000007C         ;Error Handling
   83 0000007C         Error
   84 0000007C         
   85 0000007C F10B 0B04       ADD              R11, R11, #4
   86 00000080         
   87 00000080         ; Load Trans-code
   88 00000080         Start
   89 00000080 F8DB C000       LDR              R12, [R11]
   90 00000084         
   91 00000084         ; Test if Finished
   92 00000084         
   93 00000084 EA4F 791C       LSR              R9, R12, #28
   94 00000088 F1B9 0F0F       CMP              R9, #0x0F
   95 0000008C D05C            BEQ              FIN
   96 0000008E         
   97 0000008E         ;*******************;
   98 0000008E         ; Split BCD Digits
   99 0000008E         ;*******************;
  100 0000008E         
  101 0000008E F00C 6970       AND              R9, R12, #0x0F000000 ;Millions
  102 00000092 EA4F 6219       LSR              R2, R9, #24 ;BCD # now in 0x0?
  103 00000096 2A09            CMP              R2, #9      ;Check for Valid BC
                                                            D number
  104 00000098 DCF0            BGT              Error
  105 0000009A         
  106 0000009A F40C 0970       AND              R9, R12, #0x00F00000 
                                                            ;Hundred Thou
  107 0000009E EA4F 5319       LSR              R3, R9, #20
  108 000000A2 2B09            CMP              R3, #9
  109 000000A4 DCEA            BGT              Error
  110 000000A6         
  111 000000A6 F40C 2970       AND              R9, R12, #0x000F0000 ;Ten Thou
  112 000000AA EA4F 4419       LSR              R4, R9, #16
  113 000000AE 2C09            CMP              R4, #9
  114 000000B0 DCE4            BGT              Error
  115 000000B2         
  116 000000B2 F40C 4970       AND              R9, R12, #0x0000F000 ;Thou
  117 000000B6 EA4F 3519       LSR              R5, R9, #12
  118 000000BA 2D09            CMP              R5, #9
  119 000000BC DCDE            BGT              Error
  120 000000BE         
  121 000000BE F40C 6970       AND              R9, R12, #0x00000F00 ;Hundred
  122 000000C2 EA4F 2619       LSR              R6, R9, #8
  123 000000C6 2E09            CMP              R6, #9
  124 000000C8 DCD8            BGT              Error
  125 000000CA         
  126 000000CA F00C 09F0       AND              R9, R12, #0x000000F0 ;Ten
  127 000000CE EA4F 1719       LSR              R7, R9, #4
  128 000000D2 2F09            CMP              R7, #9
  129 000000D4 DCD2            BGT              Error
  130 000000D6         
  131 000000D6 F00C 080F       AND              R8, R12, #0x0000000F ;Ones
  132 000000DA F1B8 0F09       CMP              R8, #9
  133 000000DE DCCD            BGT              Error
  134 000000E0         
  135 000000E0         ;Sum Into Number
  136 000000E0         ;R9 = Mutiply Track Reg
  137 000000E0         ;R10 = Multiply Reg
  138 000000E0         



ARM Macro Assembler    Page 6 


  139 000000E0 F04F 0901       MOV              R9, #1      ;1
  140 000000E4 F04F 0A0A       MOV              R10, #10
  141 000000E8 F04F 0000       MOV              R0, #0      ;Zero R0 for Sub-to
                                                            tal
  142 000000EC         
  143 000000EC FB08 F809       MUL              R8, R8, R9
  144 000000F0 4440            ADD              R0, R8, R0
  145 000000F2         
  146 000000F2 FB09 F90A       MUL              R9, R9, R10 ;10
  147 000000F6         
  148 000000F6 FB07 F709       MUL              R7, R7, R9
  149 000000FA 4438            ADD              R0, R7, R0
  150 000000FC         
  151 000000FC FB09 F90A       MUL              R9, R9, R10 ;100
  152 00000100         
  153 00000100 FB06 F609       MUL              R6, R6, R9
  154 00000104 4430            ADD              R0, R6, R0
  155 00000106         
  156 00000106 FB09 F90A       MUL              R9, R9, R10 ;1,000
  157 0000010A         
  158 0000010A FB05 F509       MUL              R5, R5, R9
  159 0000010E 4428            ADD              R0, R5, R0
  160 00000110         
  161 00000110 FB09 F90A       MUL              R9, R9, R10 ;10,000
  162 00000114         
  163 00000114 FB04 F409       MUL              R4, R4, R9
  164 00000118 4420            ADD              R0, R4, R0
  165 0000011A         
  166 0000011A FB09 F90A       MUL              R9, R9, R10 ;100,000
  167 0000011E         
  168 0000011E FB03 F309       MUL              R3, R3, R9
  169 00000122 4418            ADD              R0, R3, R0
  170 00000124         
  171 00000124 FB09 F90A       MUL              R9, R9, R10 ;1,000,000
  172 00000128         
  173 00000128 FB02 F209       MUL              R2, R2, R9
  174 0000012C 4410            ADD              R0, R2, R0
  175 0000012E         
  176 0000012E         ;Total now in R0
  177 0000012E         
  178 0000012E         ; Determine to Add or Subtract
  179 0000012E EA4F 791C       LSR              R9, R12, #28
  180 00000132         
  181 00000132 F1B9 0F0A       CMP              R9, #0x0A   ;Add if A
  182 00000136 BF08 1841       ADDEQ            R1, R0, R1
  183 0000013A         
  184 0000013A F1B9 0F0B       CMP              R9, #0x0B   ;Subtract if B
  185 0000013E BF08 1A09       SUBEQ            R1, R1, R0
  186 00000142         
  187 00000142 F10B 0B04       ADD              R11, R11, #4
  188 00000146         
  189 00000146 E79B            B                Start       ;Repeat Until Finis
                                                            h Condition
  190 00000148         
  191 00000148         ;Save Total with Encoding
  192 00000148         
  193 00000148         ;R12 = Backup Binary Number
  194 00000148         ;R0 = For loop counter
  195 00000148         ;R1 = Destructable Binary Number



ARM Macro Assembler    Page 7 


  196 00000148         ;R2 - R8 = 1,000,000's through 1's
  197 00000148         FIN
  198 00000148 EA22 0202       BIC              R2, R2, R2  ;Clear Regs
  199 0000014C EA23 0303       BIC              R3, R3, R3
  200 00000150 EA24 0404       BIC              R4, R4, R4
  201 00000154 EA25 0505       BIC              R5, R5, R5
  202 00000158 EA26 0606       BIC              R6, R6, R6
  203 0000015C EA27 0707       BIC              R7, R7, R7
  204 00000160 EA28 0808       BIC              R8, R8, R8
  205 00000164 EA2A 0A0A       BIC              R10, R10, R10
  206 00000168         
  207 00000168 F04F 0000       MOV              R0, #0
  208 0000016C         
  209 0000016C 468C            MOV              R12, R1     ;Copy binary number
                                                             into R12
  210 0000016E         
  211 0000016E         ;Check if Number is negative if 2's complement
  212 0000016E         
  213 0000016E 2900            CMP              R1, #0
  214 00000170 BFBC 43C9       MVNLT            R1, R1
  215 00000174 1C49            ADDLT            R1, R1, #1
  216 00000176         
  217 00000176         For
  218 00000176         ;Algo = Checking if each place is greater than or equal 
                       to 5, if then add 3
  219 00000176         
  220 00000176 281C            CMP              R0, #28
  221 00000178 D053            BEQ              Finalize
  222 0000017A         
  223 0000017A F1B8 0F05       CMP              R8, #5
  224 0000017E BFA8 F108 
              0803             ADDGE            R8, R8, #3
  225 00000184         
  226 00000184 2F05            CMP              R7, #5
  227 00000186 BFA8 1CFF       ADDGE            R7, R7, #3
  228 0000018A         
  229 0000018A 2E05            CMP              R6, #5
  230 0000018C BFA8 1CF6       ADDGE            R6, R6, #3
  231 00000190         
  232 00000190 2D05            CMP              R5, #5
  233 00000192 BFA8 1CED       ADDGE            R5, R5, #3
  234 00000196         
  235 00000196 2C05            CMP              R4, #5
  236 00000198 BFA8 1CE4       ADDGE            R4, R4, #3
  237 0000019C         
  238 0000019C 2B05            CMP              R3, #5
  239 0000019E BFA8 1CDB       ADDGE            R3, R3, #3
  240 000001A2         
  241 000001A2 2A05            CMP              R2, #5
  242 000001A4 BFA8 1CD2       ADDGE            R2, R2, #3
  243 000001A8         
  244 000001A8         ;Shifting all bits left by 1 masking MSB of all into nex
                       t reg
  245 000001A8         
  246 000001A8 EA4F 0242       LSL              R2, R2, #1  ;1,000,000
  247 000001AC F003 0908       AND              R9, R3, #0x08
  248 000001B0 EA42 02D9       ORR              R2, R2, R9, LSR #3
  249 000001B4 F002 020F       AND              R2, R2, #0xF
  250 000001B8         



ARM Macro Assembler    Page 8 


  251 000001B8 EA4F 0343       LSL              R3, R3, #1  ;100,000
  252 000001BC F004 0908       AND              R9, R4, #0x08
  253 000001C0 EA43 03D9       ORR              R3, R3, R9, LSR #3
  254 000001C4 F003 030F       AND              R3, R3, #0xF
  255 000001C8         
  256 000001C8 EA4F 0444       LSL              R4, R4, #1  ;10,000
  257 000001CC F005 0908       AND              R9, R5, #0x08
  258 000001D0 EA44 04D9       ORR              R4, R4, R9, LSR #3
  259 000001D4 F004 040F       AND              R4, R4, #0xF
  260 000001D8         
  261 000001D8 EA4F 0545       LSL              R5, R5, #1  ;1,000
  262 000001DC F006 0908       AND              R9, R6, #0x08
  263 000001E0 EA45 05D9       ORR              R5, R5, R9, LSR #3
  264 000001E4 F005 050F       AND              R5, R5, #0xF
  265 000001E8         
  266 000001E8 EA4F 0646       LSL              R6, R6, #1  ;100
  267 000001EC F007 0908       AND              R9, R7, #0x08
  268 000001F0 EA46 06D9       ORR              R6, R6, R9, LSR #3
  269 000001F4 F006 060F       AND              R6, R6, #0xF
  270 000001F8         
  271 000001F8 EA4F 0747       LSL              R7, R7, #1  ;10
  272 000001FC F008 0908       AND              R9, R8, #0x08
  273 00000200 EA47 07D9       ORR              R7, R7, R9, LSR #3
  274 00000204 F007 070F       AND              R7, R7, #0xF
  275 00000208         
  276 00000208 EA4F 0848       LSL              R8, R8, #1  ;1
  277 0000020C F008 080F       AND              R8, R8, #0xF
  278 00000210 F001 6900       AND              R9, R1, #0x8000000
  279 00000214 EA4F 0141       LSL              R1, R1, #1
  280 00000218 EA48 68D9       ORR              R8, R8, R9, LSR #27
  281 0000021C         
  282 0000021C F100 0001       ADD              R0, R0, #1
  283 00000220         
  284 00000220 E7A9            B                For
  285 00000222         
  286 00000222         Finalize
  287 00000222 F1BC 0F00       CMP              R12, #0     ;Check if binary is
                                                             less than zero
  288 00000226 BFAC F04F 
              4A20             MOVGE            R10, #0xA0000000 ;Tack on A if 
                                                            postive or Zero
  289 0000022C F04F 4A30       MOVLT            R10, #0xB0000000 ;Tack on B if 
                                                            negative
  290 00000230         
  291 00000230 EA4A 6A02       ORR              R10, R10, R2, LSL #24
  292 00000234 EA4A 5A03       ORR              R10, R10, R3, LSL #20
  293 00000238 EA4A 4A04       ORR              R10, R10, R4, LSL #16
  294 0000023C EA4A 3A05       ORR              R10, R10, R5, LSL #12
  295 00000240 EA4A 2A06       ORR              R10, R10, R6, LSL #8
  296 00000244 EA4A 1A07       ORR              R10, R10, R7, LSL #4
  297 00000248 EA4A 0A08       ORR              R10, R10, R8
  298 0000024C         
  299 0000024C F8DF B00C       LDR              R11, =(TRANSACTIONS_TOTAL) 
                                                            ;Store Value
  300 00000250 F8CB A000       STR              R10, [R11]
  301 00000254         
  302 00000254         ; DO NOT MODIFY ANTHING BELOW THIS LINE!!!        
  303 00000254         RETURN
  304 00000254 E8BD 9FFF       POP              {R0-R12, PC}



ARM Macro Assembler    Page 9 


  305 00000258         
  306 00000258                 ENDP
  307 00000258                 align
  308 00000258         
  309 00000258         
  310 00000258                 END
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
\ece353_hw1.d -o.\obj\ece353_hw1.o -IC:\Users\rbambrough\Downloads\ECE353-S16-H
W1\RTE -IC:\AppV\mdk_510\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\AppV\mdk_5
10\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\Include\TM4C123 --predefine="__EVAL SETA
 1" --predefine="__MICROLIB SETA 1" --list=.\lst\ece353_hw1.lst ece353_hw1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SRAM 00000000

Symbol: SRAM
   Definitions
      At line 15 in file ece353_hw1.s
   Uses
      None
Comment: SRAM unused
TRANSACTIONS 00000004

Symbol: TRANSACTIONS
   Definitions
      At line 18 in file ece353_hw1.s
   Uses
      At line 7 in file ece353_hw1.s
      At line 78 in file ece353_hw1.s

TRANSACTIONS_TOTAL 00000000

Symbol: TRANSACTIONS_TOTAL
   Definitions
      At line 17 in file ece353_hw1.s
   Uses
      At line 6 in file ece353_hw1.s
      At line 299 in file ece353_hw1.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Error 0000007C

Symbol: Error
   Definitions
      At line 83 in file ece353_hw1.s
   Uses
      At line 104 in file ece353_hw1.s
      At line 109 in file ece353_hw1.s
      At line 114 in file ece353_hw1.s
      At line 119 in file ece353_hw1.s
      At line 124 in file ece353_hw1.s
      At line 129 in file ece353_hw1.s
      At line 133 in file ece353_hw1.s

FIN 00000148

Symbol: FIN
   Definitions
      At line 197 in file ece353_hw1.s
   Uses
      At line 95 in file ece353_hw1.s
Comment: FIN used once
FLASH 00000000

Symbol: FLASH
   Definitions
      At line 25 in file ece353_hw1.s
   Uses
      None
Comment: FLASH unused
Finalize 00000222

Symbol: Finalize
   Definitions
      At line 286 in file ece353_hw1.s
   Uses
      At line 221 in file ece353_hw1.s
Comment: Finalize used once
For 00000176

Symbol: For
   Definitions
      At line 217 in file ece353_hw1.s
   Uses
      At line 284 in file ece353_hw1.s
Comment: For used once
PERSON1 0000001E

Symbol: PERSON1
   Definitions
      At line 28 in file ece353_hw1.s
   Uses
      At line 9 in file ece353_hw1.s
Comment: PERSON1 used once
PERSON2 0000002D

Symbol: PERSON2
   Definitions
      At line 30 in file ece353_hw1.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 10 in file ece353_hw1.s
Comment: PERSON2 used once
RETURN 00000254

Symbol: RETURN
   Definitions
      At line 303 in file ece353_hw1.s
   Uses
      None
Comment: RETURN unused
Start 00000080

Symbol: Start
   Definitions
      At line 88 in file ece353_hw1.s
   Uses
      At line 189 in file ece353_hw1.s
Comment: Start used once
TEAM 00000000

Symbol: TEAM
   Definitions
      At line 26 in file ece353_hw1.s
   Uses
      At line 8 in file ece353_hw1.s
Comment: TEAM used once
hw1 0000003C

Symbol: hw1
   Definitions
      At line 38 in file ece353_hw1.s
   Uses
      At line 5 in file ece353_hw1.s
Comment: hw1 used once
11 symbols
349 symbols in table
